//циклы 



//1) for используется когда вы заранее знаете, сколько раз вам нужно что-то сделать;

for (var i = 0; i < 5; i++) {
    console.log(i + ": Hello, JavaScript!");
  }
  
  //2) for...in используется для обхода свойств объектов;
  
  
  /*Циклы for...in используются для обхода свойств объектов, не являющихся массивами. Такой обход также называется перечислением. 
  При обходе рекомендуется использовать метод hasOwnProperty(), чтобы отфильтровать свойства, которые были унаследованы от прототипа.
  Для примера создадим объект с помощью литерала объекта.*/
  
  
  
  
  
  var user = {
      name: 'Alice', 
      age: 25, 
      country: 'Russia'
    };
    
    for (var prop in user) {
      console.log(prop + ": " + user[prop]);
    }
  
  
  
  
  
  //3) while используется когда вы не знаете, сколько раз нужно что-то сделать;
  /*Цикл while - цикл с предварительной проверкой условного выражения. Инструкция внутри цикла (блок кода в фигурных скобках) будет выполняться в случае, 
  если условное выражение вычисляется в true. Если первая проверка даст результат false, блок инструкций не выполнится ни разу.*/
  
  
  var i = 1; 
  var msg = '';
  while (i < 10) {
    msg+= i + ' x 3 = ' + (i * 3) + '<br>';  
    i++;
  }
  document.write(msg);
  
  
  
  
  
  
  
  
  
  /*4) do...while работает аналогично с оператором while. Отличается тем, что do...while 
  всегда выполняет выражение в фигурных скобках, по крайней мере один раз, даже если проверка условия возвращает false.
  
  Цикл do...while; проверяет условие продолжения после выполнения цикла. В отличие от цикла while, в do...while; тело цикла выполняется как минимум один раз, 
  так как условие проверяется в конце цикла, а не в начале. Данный цикл используется реже, чем while, так как на практике ситуация, когда требуется хотя бы однократное 
  исполнение цикла, встречается редко.
  */
  
  var result = '';
  var i = 0;
  do {
     i += 1;
     result += i + ' ';
  } while (i < 5);
  document.write(result);